@using Taskify.Services
@using Taskify.Dto
@using Taskify.Utils
@inherits LayoutComponentBase
@inject IDataService DataService;

<MainLayout>
    <TitleContent>
        <Typography Style="flex-grow: 1; margin-left: 20px;"
                    Variant="@TypographyVariant.H6"
                    NoWrap>
            Taskify
        </Typography>
    </TitleContent>
    <BodyContent>
        @Body
    </BodyContent>
    <SidebarContent>
        <Navigation Class="FullLayout-Navigation"
                    Items="@Items">
        </Navigation>
        <Divider Class="FullLayout-Divider" />
        <Navigation Class="FullLayout-Navigation"
                    Items="@DynamicItems">
        </Navigation>
    </SidebarContent>
</MainLayout>

@code
{
    protected override async Task OnInitializedAsync()
    {
        var taskList = await DataService.GetTaskLists();

        var system = taskList.Where(tl => tl?.Specification == null || !tl.Specification.IsUserGenerated);
        var userDefined = taskList.Where(tl => tl?.Specification != null && tl.Specification.IsUserGenerated);

        Items.Clear();
        Items.AddRange(system.Select(s => new NavigationItem
        {
            Title = s.Name,
            Path = s.Uri ?? String.Empty,
            Icon = TaskIcon.GetIconFor(s.Id),
            Prefix = false
        }));

        DynamicItems.Clear();
        DynamicItems.AddRange(userDefined.Select(s => new NavigationItem
        {
            Title = s.Name,
            Path = s.Uri ?? String.Empty,
            Icon = TaskIcon.GetIconFor(s.Id),
            Prefix = false
            }));

         base.OnInitializedAsync();
    }

    public List<NavigationItem> Items { get; set; } = new List<NavigationItem>();
    public List<NavigationItem> DynamicItems { get; set; } = new List<NavigationItem>();

@*new NavigationItem
    {
        Title = "My Day",
        Path = "",
        Icon = @<HomeIcon />,
        Prefix = false
    },*@
}
